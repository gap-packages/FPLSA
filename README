      FPLSA -- The Finitely Presented Lie Super-Algebra Package
      ---------------------------------------------------------
            A Link to an External Lie Todd-Coxeter Program

When  K  is  a  finitely-presented  Lie  algebra,  the  GAP  Operation
`IsomorphismSCTableAlgebra' can be used to make  the  structure  of  K
explicit, in the form of an  isomorphic  algebra  given  by  structure
constants, which is much more amenable to further computations.

This GAP package installs an alternative method  for  this  Operation,
which calls an external C program (fplsa version 4.0) to do  the  hard
part of the computation. This speeds up the  calculation  and  permits
larger problems  to  be  attempted.  The  external  program  has  much
additional functionality which is not used by the present  version  of
the package.

Since the package contains an external C program, it works only  under
UNIX and requires a C compiler to install it.

                           Installing FPLSA
                           ----------------

You have to perform the following steps to install FPLSA:

 -- Get the sources
 -- Unpack the sources with the `unzoo' utility
 -- Use the `configure' script to adjust everything to your specific 
    system
 -- Compile the C part of FPLSA

                  Getting and unpacking the sources
                  ---------------------------------

You can download the sources from the same places as GAP. So the main
FTP servers are:

ftp://ftp.gap-system.org/gap/share/
ftp://ftp.math.rwth-aachen.de/pub/gap/share/

You need only one file with the name `fplsa1r1.zoo' which is in the
subdirectory for the packages. When you installed  GAP  you  used  the
utility `unzoo' to unpack the distribution. You will  need  this  here
again. See the GAP manual for instructions on how to get  and  compile
this. You now change your current directory to the `pkg'  subdirectory
of the location where you installed GAP (you typed an `unzoo' command,
then a new directory called `gap4rX' for some integer X  was  created,
this directory contains the `pkg' subdirectory). The standard location
would be:

# cd /usr/local/lib/gap4rX/pkg
(do not type the prompt character #)

Now you extract the sources for the FPLSA package:

# unzoo -x fplsa1r1.zoo
fplsa/Makefile.in       -- extracted as text
fplsa/configure         -- extracted as text
/bin/mkdir: cannot make directory `fplsa': File exists
fplsa/gap/fplsa.g       -- extracted as text
/bin/mkdir: cannot make directory `fplsa': File exists
fplsa/lib/ab-3-1-5.in   -- extracted as text
fplsa/lib/ab-3-1.in     -- extracted as text
fplsa/lib/ab-3.in       -- extracted as text
fplsa/lib/antiburg.in   -- extracted as text
fplsa/lib/burg-2-5.in   -- extracted as text
fplsa/lib/burg-2.in     -- extracted as text
...

Note that the warning is *not* serious.

The `unzoo' utility  unpacks  the  files  and  stores  them  into  the
appropriate subdirectories. FPLSA resides completely in the  following
subdirectory (assuming standard location):

/usr/local/lib/gap4rX/pkg/fplsa

                 Configuring and Compiling the C part
                 ------------------------------------

You have to change your  current  working  directory  to  the  `fplsa'
subdirectory. You do this by

# cd fplsa

if your current working directory is the one, where you used  `unzoo'.
Now you invoke the `configure' script by:

# ./configure ../..

This script produces some Makefiles which  are  used  to  compile  the
code. You do this by typing

# make
if test ! -d bin;  then mkdir bin;  fi
if test ! -d bin/i686-pc-linux-gnu-egcs;  then mkdir bin/i686-pc-linux-gnu-egcs;  fi
gcc -o bin/i686-pc-linux-gnu-egcs/fplsa4 src/fplsa4.c
src/fplsa4.c: In function `main':
src/fplsa4.c:1796: warning: return type of `main' is not `int'
/tmp/cc2N8Buc.o: In function `GetInput':
/tmp/cc2N8Buc.o(.text+0xd645): the `gets' function is dangerous and should not be used.

You may ignore the warnings; they are *not* serious.

Now all C sources are compiled and a binary executable  is  built.  If
you now enter GAP and type

    gap> LoadPackage( "fplsa" );

The new functionality should be available.


                               Authors
                               -------

The FPLSA program was written by V Gerdt and V Kornyak, both of the:

Laboratory of Computing Techniques and Automation,
Joint Institute for Nuclear Research, Dubna, Moscow Region 141980,
Russia. Email: <gerdt@jinr.ru> and <kornyak@jinr.dubna.su>

